# All local jobs are part of the vanilla universe.
Universe        = vanilla

# We want email if the job completed successfully. This can
# be set to Always, Error, or Never.
Notification    = Never

# The executable we want to run.
Executable   =  /phenix/plhf/belmonrj/AMPT_small_systems/sims/run_auau200.py

# The argument to pass to the executable.
Arguments       = $(Process) 1

# Get current environment
GetEnv          = True

# Rank is an expression that states how to rank machines which
# have already met the requirements expression.  Essentially,
# rank expresses preference.  A higher numeric value equals better
# rank.  Condor will give the job the machine with the highest rank.
Rank		= CPU_Speed

# Jobs with higher numerical priority will run before jobs
# with lower numerical priority (-20 to 20).
Priority        = +20

# Used to give jobs a directory with respect to file input
# and output.
Initialdir   = /phenix/hhj3/dcm07e/dAuEnergyScan/sims/

# Input file given to the job.
Input           = /dev/null

# The job's stdout is sent to this file.
Output       = /phenix/plhf/belmonrj/AMPT_small_systems/condor_logs/ran_ampt_cumulants_auau200_1.out.$(Process)

# The job's stderr is sent to this file.
Error        = /phenix/plhf/belmonrj/AMPT_small_systems/condor_logs/ran_ampt_cumulants_auau200_1.err.$(Process)

# The condor log file for this job, useful when debuggin
Log          = /phenix/plhf/belmonrj/AMPT_small_systems/condor_logs/ran_ampt_cumulants_auau200_1.log.$(Process)

# Email address to send notification to.
#Notify_user     = darren.mcglinchey@colorado.edu

# add hold to resolve eviction problems
PeriodicHold = (NumJobStarts>=1 && JobStatus == 1)

#require running on phenix nodes.
Requirements = (CPU_Experiment == "phenix")

# These are job flags which are non-Condor specific.
# The "Experiment" flag should be set to the user's experiment:
# star, phobos, phenix, brahms, atlas, etc.
+Experiment     = "phenix"

# Since this is an analysis job we set this to "cas".
+Job_Type       = "cas"

# This should be the last command and tells condor to queue the
# job.  If a number is placed after the command (i.e. Queue 15)
# then the job will be submitted N times.  Use the $(Process)
# macro to make your input/output and log files unique.
Queue 20
